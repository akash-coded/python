version: '2.1'
services:

  kong-dashboard:
    build: ui/
    container_name: kong-dashboard
    ports:
      - 8080:8080
    volumes:
      - ./ui/:/app
      - /app/node_modules/
    depends_on:
      kong:
        condition: service_healthy
    entrypoint: ./docker/entrypoint_dev.sh

  kong-database:
    image: postgres:9.5
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  kong-migration:
    image: kong
    depends_on:
      kong-database:
        condition: service_healthy
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
    command: kong migrations up

  kong:
    build: kong/
    depends_on:
      kong-database:
        condition: service_healthy
      kong-migration:
        condition: service_started
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=kong
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
    ports:
      - 8001:8001
      - 8000:8000
    expose:
      - 8000
      - 8001
      - 8443
      - 8444
    healthcheck:
      test: ["CMD-SHELL", "curl -I -s -L http://127.0.0.1:8000 || exit 1"]
      interval: 5s
      retries: 10

# API
  flask-api-no-auth:
    build:
      context: api/
      dockerfile: Dockerfile
    environment:
      API_AUTH: no-auth
      API_MSG: "API with flask and proxy by kong.(without auth key)"

  flask-api-auth-key:
    build:
      context: api/
      dockerfile: Dockerfile
    environment:
      API_AUTH: key-auth
      API_MSG: "API with flask and proxy by kong.(with key authentification)"

  flask-api-auth-basic:
    build:
      context: api/
      dockerfile: Dockerfile
    environment:
      API_AUTH: basic-auth
      API_MSG: "API with flask and proxy by kong.(with basic authentification)"
